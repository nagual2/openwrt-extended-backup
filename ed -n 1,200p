[1mdiff --git a/scripts/openwrt_full_backup b/scripts/openwrt_full_backup[m
[1mindex 71c8e02..49b5ab4 100755[m
[1m--- a/scripts/openwrt_full_backup[m
[1m+++ b/scripts/openwrt_full_backup[m
[36m@@ -59,6 +59,47 @@[m [mARCHIVE_FILENAME=''[m
 ARCHIVE_PATH=''[m
 REMOVE_ARCHIVE_ON_FAILURE=0[m
 [m
[32m+[m[32mDRY_RUN_ENABLED=0[m
[32m+[m[32mif [ "${DRY_RUN+x}" = x ]; then[m
[32m+[m[32m    case "$DRY_RUN" in[m
[32m+[m[32m        '' | 0 | [Ff][Aa][Ll][Ss][Ee] | [Nn][Oo] | [Oo][Ff][Ff])[m
[32m+[m[32m            DRY_RUN_ENABLED=0[m
[32m+[m[32m            ;;[m
[32m+[m[32m        *)[m
[32m+[m[32m            DRY_RUN_ENABLED=1[m
[32m+[m[32m            ;;[m
[32m+[m[32m    esac[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mUPLOAD_TARGET=''[m
[32m+[m[32mUPLOAD_SCHEME=''[m
[32m+[m[32mUPLOAD_REMOTE_SPEC=''[m
[32m+[m[32mUPLOAD_USER_HOST=''[m
[32m+[m[32mUPLOAD_REMOTE_PATH=''[m
[32m+[m[32mIDENTITY_FILE=''[m
[32m+[m[32mKNOWN_HOSTS_FILE=''[m
[32m+[m[32mUPLOAD_RETRY=1[m
[32m+[m
[32m+[m[32mDEFAULT_OVERLAY_DIR='/overlay'[m
[32m+[m[32mif [ "${OVERLAY_SOURCE+x}" = x ] && [ -n "$OVERLAY_SOURCE" ]; then[m
[32m+[m[32m    case "$OVERLAY_SOURCE" in[m
[32m+[m[32m        /)[m
[32m+[m[32m            OVERLAY_PATH='/'[m
[32m+[m[32m            ;;[m
[32m+[m[32m        */)[m
[32m+[m[32m            OVERLAY_PATH=${OVERLAY_SOURCE%/}[m
[32m+[m[32m            ;;[m
[32m+[m[32m        *)[m
[32m+[m[32m            OVERLAY_PATH=$OVERLAY_SOURCE[m
[32m+[m[32m            ;;[m
[32m+[m[32m    esac[m
[32m+[m[32m    if [ -z "$OVERLAY_PATH" ]; then[m
[32m+[m[32m        OVERLAY_PATH=$DEFAULT_OVERLAY_DIR[m
[32m+[m[32m    fi[m
[32m+[m[32melse[m
[32m+[m[32m    OVERLAY_PATH=$DEFAULT_OVERLAY_DIR[m
[32m+[m[32mfi[m
[32m+[m
 KSMBD_SHARE_NAME='owrt_archive'[m
 KSMBD_USER='owrt_backup'[m
 KSMBD_PASSWORD=''[m
[36m@@ -109,16 +150,22 @@[m [musage() {[m
 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: openwrt_full_backup [–û–ü–¶–ò–ò][m
 [m
 –û–ø—Ü–∏–∏:[m
[31m-      --export=MODE       –†–µ–∂–∏–º —ç–∫—Å–ø–æ—Ä—Ç–∞: scp (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é), smb –∏–ª–∏ local[m
[31m-      --emit-scp-cmd      –í—ã–≤–µ—Å—Ç–∏ –≥–æ—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É scp –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞[m
[31m-      --ssh-host HOST     –ò–º—è –∏–ª–∏ –∞–¥—Ä–µ—Å OpenWrt-—Ö–æ—Å—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é OpenWrt)[m
[31m-      --ssh-port PORT     –ü–æ—Ä—Ç SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 22)[m
[31m-      --ssh-user USER     –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é root)[m
[31m-      --out-dir PATH      –ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è –∞—Ä—Ö–∏–≤–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /tmp)[m
[31m-  -q, --quiet             –†–µ–∂–∏–º —Ç–∏—Ö–æ–≥–æ –≤—ã–≤–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏)[m
[31m-  -v                      –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ (–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–≤–∞–∂–¥—ã)[m
[31m-  -h, --help              –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É –∏ –≤—ã–π—Ç–∏[m
[31m-  -V, --version           –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é –∏ –≤—ã–π—Ç–∏[m
[32m+[m[32m      --export=MODE         –†–µ–∂–∏–º —ç–∫—Å–ø–æ—Ä—Ç–∞: scp (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é), smb –∏–ª–∏ local[m
[32m+[m[32m      --emit-scp-cmd        –í—ã–≤–µ—Å—Ç–∏ –≥–æ—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É scp –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞[m
[32m+[m[32m      --ssh-host HOST       –ò–º—è –∏–ª–∏ –∞–¥—Ä–µ—Å OpenWrt-—Ö–æ—Å—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é OpenWrt)[m
[32m+[m[32m      --ssh-port PORT       –ü–æ—Ä—Ç SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 22)[m
[32m+[m[32m      --ssh-user USER       –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é root)[m
[32m+[m[32m      --output PATH         –ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è –∞—Ä—Ö–∏–≤–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /tmp)[m
[32m+[m[32m      --out-dir PATH        –ê–ª–∏–∞—Å –¥–ª—è --output (—É—Å—Ç–∞—Ä.)[m
[32m+[m[32m      --upload URL          –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞—Ä—Ö–∏–≤ –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Ö–æ—Å—Ç (scp:// –∏–ª–∏ sftp://)[m
[32m+[m[32m      --identity PATH       –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è scp/sftp (–Ω–∞–ø—Ä–∏–º–µ—Ä, ~/.ssh/id_ed25519)[m
[32m+[m[32m      --known-hosts PATH    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∞–π–ª known_hosts –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–µ–π[m
[32m+[m[32m      --retry COUNT         –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)[m
[32m+[m[32m  -n, --dry-run             –ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –±–µ–∑ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ (–∞—Ä—Ö–∏–≤ –Ω–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è)[m
[32m+[m[32m  -q, --quiet               –†–µ–∂–∏–º —Ç–∏—Ö–æ–≥–æ –≤—ã–≤–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏)[m
[32m+[m[32m  -v                        –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ (–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–≤–∞–∂–¥—ã)[m
[32m+[m[32m  -h, --help                –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É –∏ –≤—ã–π—Ç–∏[m
[32m+[m[32m  -V, --version             –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é –∏ –≤—ã–π—Ç–∏[m
 EOF[m
 }[m
 [m
[36m@@ -139,6 +186,188 @@[m [mto_absolute_path() {[m
     esac[m
 }[m
 [m
[32m+[m[32mparse_upload_target() {[m
[32m+[m[32m    target=$1[m
[32m+[m
[32m+[m[32m    if [ -z "$target" ]; then[m
[32m+[m[32m        fatal '–û–ø—Ü–∏—è --upload —Ç—Ä–µ–±—É–µ—Ç URL (scp:// –∏–ª–∏ sftp://)' "$EX_USAGE"[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    case "$target" in[m
[32m+[m[32m        scp://*)[m
[32m+[m[32m            rest=${target#scp://}[m
[32m+[m[32m            case "$rest" in[m
[32m+[m[32m                *:*)[m
[32m+[m[32m                    host_part=${rest%%:*}[m
[32m+[m[32m                    path_part=${rest#*:}[m
[32m+[m[32m                    ;;[m
[32m+[m[32m                *)[m
[32m+[m[32m                    fatal 'URL –¥–ª—è SCP –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å host:path' "$EX_USAGE"[m
[32m+[m[32m                    ;;[m
[32m+[m[32m            esac[m
[32m+[m[32m            if [ -z "$host_part" ] || [ -z "$path_part" ]; then[m
[32m+[m[32m                fatal 'URL –¥–ª—è SCP –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å host:path' "$EX_USAGE"[m
[32m+[m[32m            fi[m
[32m+[m[32m            UPLOAD_TARGET=$target[m
[32m+[m[32m            UPLOAD_SCHEME='scp'[m
[32m+[m[32m            UPLOAD_USER_HOST=$host_part[m
[32m+[m[32m            UPLOAD_REMOTE_PATH=$path_part[m
[32m+[m[32m            UPLOAD_REMOTE_SPEC="$UPLOAD_USER_HOST:$UPLOAD_REMOTE_PATH"[m
[32m+[m[32m            ;;[m
[32m+[m[32m        sftp://*)[m
[32m+[m[32m            rest=${target#sftp://}[m
[32m+[m[32m            case "$rest" in[m
[32m+[m[32m                *:*)[m
[32m+[m[32m                    host_part=${rest%%:*}[m
[32m+[m[32m                    path_part=${rest#*:}[m
[32m+[m[32m                    ;;[m
[32m+[m[32m                *)[m
[32m+[m[32m                    fatal 'URL –¥–ª—è SFTP –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å host:/–ø—É—Ç—å' "$EX_USAGE"[m
[32m+[m[32m                    ;;[m
[32m+[m[32m            esac[m
[32m+[m[32m            if [ -z "$host_part" ] || [ -z "$path_part" ]; then[m
[32m+[m[32m                fatal 'URL –¥–ª—è SFTP –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å host:/–ø—É—Ç—å' "$EX_USAGE"[m
[32m+[m[32m            fi[m
[32m+[m[32m            UPLOAD_TARGET=$target[m
[32m+[m[32m            UPLOAD_SCHEME='sftp'[m
[32m+[m[32m            UPLOAD_USER_HOST=$host_part[m
[32m+[m[32m            UPLOAD_REMOTE_PATH=$path_part[m
[32m+[m[32m            UPLOAD_REMOTE_SPEC=$UPLOAD_REMOTE_PATH[m
[32m+[m[32m            ;;[m
[32m+[m[32m        *)[m
[32m+[m[32m            fatal "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Å—Ö–µ–º–∞ –¥–ª—è --upload: $target" "$EX_USAGE"[m
[32m+[m[32m            ;;[m
[32m+[m[32m    esac[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mprepare_upload_environment() {[m
[32m+[m[32m    if [ -z "$UPLOAD_TARGET" ]; then[m
[32m+[m[32m        return 0[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    case "$UPLOAD_SCHEME" in[m
[32m+[m[32m        scp)[m
[32m+[m[32m            require_command scp[m
[32m+[m[32m            ;;[m
[32m+[m[32m        sftp)[m
[32m+[m[32m            require_command sftp[m
[32m+[m[32m            ;;[m
[32m+[m[32m    esac[m
[32m+[m
[32m+[m[32m    if [ -n "$IDENTITY_FILE" ] && [ ! -r "$IDENTITY_FILE" ]; then[m
[32m+[m[32m        fatal "–§–∞–π–ª –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $IDENTITY_FILE" "$EX_UNAVAILABLE"[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    if [ -n "$KNOWN_HOSTS_FILE" ] && [ ! -r "$KNOWN_HOSTS_FILE" ]; then[m
[32m+[m[32m        fatal "–§–∞–π–ª known_hosts –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $KNOWN_HOSTS_FILE" "$EX_UNAVAILABLE"[m
[32m+[m[32m    fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbuild_scp_preview() {[m
[32m+[m[32m    command_text='scp'[m
[32m+[m[32m    if [ "$SSH_PORT" != '22' ]; then[m
[32m+[m[32m        command_text="$command_text -P $SSH_PORT"[m
[32m+[m[32m    fi[m
[32m+[m[32m    if [ -n "$IDENTITY_FILE" ]; then[m
[32m+[m[32m        command_text="$command_text -i $IDENTITY_FILE"[m
[32m+[m[32m    fi[m
[32m+[m[32m    command_text="$command_text -o StrictHostKeyChecking=yes"[m
[32m+[m[32m    if [ -n "$KNOWN_HOSTS_FILE" ]; then[m
[32m+[m[32m        command_text="$command_text -o UserKnownHostsFile=$KNOWN_HOSTS_FILE"[m
[32m+[m[32m    fi[m
[32m+[m[32m    command_text="$command_text $ARCHIVE_PATH"[m
[32m+[m[32m    if [ -n "$UPLOAD_REMOTE_SPEC" ]; then[m
[32m+[m[32m        command_text="$command_text $UPLOAD_REMOTE_SPEC"[m
[32m+[m[32m    fi[m
[32m+[m[32m    printf '%s\n' "$command_text"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mrun_with_retries() {[m
[32m+[m[32m    max_attempts=$1[m
[32m+[m[32m    shift[m
[32m+[m[32m    attempt=1[m
[32m+[m[32m    status=0[m
[32m+[m[32m    while [ "$attempt" -le "$max_attempts" ]; do[m
[32m+[m[32m        if "$@"; then[m
[32m+[m[32m            return 0[m
[32m+[m[32m        fi[m
[32m+[m[32m        status=$?[m
[32m+[m[32m        if [ "$attempt" -ge "$max_attempts" ]; then[m
[32m+[m[32m            return "$status"[m
[32m+[m[32m        fi[m
[32m+[m[32m        attempt=$((attempt + 1))[m
[32m+[m[32m        log_info "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ($attempt/$max_attempts)"[m
[32m+[m[32m    done[m
[32m+[m[32m    return "$status"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mperform_upload() {[m
[32m+[m[32m    if [ -z "$UPLOAD_TARGET" ]; then[m
[32m+[m[32m        return 0[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    if [ "$UPLOAD_SCHEME" = 'scp' ]; then[m
[32m+[m[32m        if [ "$DRY_RUN_ENABLED" -eq 1 ]; then[m
[32m+[m[32m            log_info '–†–µ–∂–∏–º dry-run: –≥–æ—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ SCP'[m
[32m+[m[32m            log_info "$(build_scp_preview)"[m
[32m+[m[32m            return 0[m
[32m+[m[32m        fi[m
[32m+[m
[32m+[m[32m        set -- scp[m
[32m+[m[32m        if [ "$SSH_PORT" != '22' ]; then[m
[32m+[m[32m            set -- "$@" -P "$SSH_PORT"[m
[32m+[m[32m        fi[m
[32m+[m[32m        if [ -n "$IDENTITY_FILE" ]; then[m
[32m+[m[32m            set -- "$@" -i "$IDENTITY_FILE"[m
[32m+[m[32m        fi[m
[32m+[m[32m        set -- "$@" -o StrictHostKeyChecking=yes[m
[32m+[m[32m        if [ -n "$KNOWN_HOSTS_FILE" ]; then[m
[32m+[m[32m            set -- "$@" -o "UserKnownHostsFile=$KNOWN_HOSTS_FILE"[m
[32m+[m[32m        fi[m
[32m+[m[32m        set -- "$@" "$ARCHIVE_PATH" "$UPLOAD_REMOTE_SPEC"[m
[32m+[m
[32m+[m[32m        log_info "–ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–∞ —á–µ—Ä–µ–∑ SCP: $UPLOAD_REMOTE_SPEC"[m
[32m+[m[32m        run_with_retries "$UPLOAD_RETRY" "$@"[m
[32m+[m[32m        status=$?[m
[32m+[m[32m        return "$status"[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    if [ "$UPLOAD_SCHEME" = 'sftp' ]; then[m
[32m+[m[32m        if [ "$DRY_RUN_ENABLED" -eq 1 ]; then[m
[32m+[m[32m            log_info '–†–µ–∂–∏–º dry-run: –∑–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ SFTP (–∫–æ–º–∞–Ω–¥–∞ put)'[m
[32m+[m[32m            log_info "put \"$ARCHIVE_PATH\" \"$UPLOAD_REMOTE_PATH\""[m
[32m+[m[32m            return 0[m
[32m+[m[32m        fi[m
[32m+[m
[32m+[m[32m        batch_file=$(mktemp)[m
[32m+[m[32m        if [ -z "$batch_file" ]; then[m
[32m+[m[32m            fatal '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è SFTP' "$EX_SOFTWARE"[m
[32m+[m[32m        fi[m
[32m+[m[32m        printf 'put "%s" "%s"\n' "$ARCHIVE_PATH" "$UPLOAD_REMOTE_PATH" >"$batch_file"[m
[32m+[m
[32m+[m[32m        set -- sftp[m
[32m+[m[32m        if [ -n "$IDENTITY_FILE" ]; then[m
[32m+[m[32m            set -- "$@" -i "$IDENTITY_FILE"[m
[32m+[m[32m        fi[m
[32m+[m[32m        if [ "$SSH_PORT" != '22' ]; then[m
[32m+[m[32m            set -- "$@" -P "$SSH_PORT"[m
[32m+[m[32m        fi[m
[32m+[m[32m        set -- "$@" -o StrictHostKeyChecking=yes[m
[32m+[m[32m        if [ -n "$KNOWN_HOSTS_FILE" ]; then[m
[32m+[m[32m            set -- "$@" -o "UserKnownHostsFile=$KNOWN_HOSTS_FILE"[m
[32m+[m[32m        fi[m
[32m+[m[32m        set -- "$@" -b "$batch_file" "$UPLOAD_USER_HOST"[m
[32m+[m
[32m+[m[32m        log_info "–ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–∞ —á–µ—Ä–µ–∑ SFTP: $UPLOAD_USER_HOST -> $UPLOAD_REMOTE_PATH"[m
[32m+[m[32m        run_with_retries "$UPLOAD_RETRY" "$@"[m
[32m+[m[32m        status=$?[m
[32m+[m[32m        rm -f "$batch_file"[m
[32m+[m[32m        return "$status"[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    return 0[m
[32m+[m[32m}[m
[32m+[m
 find_share_index_by_name() {[m
     name=$1[m
     share_indexes=$(uci -q show ksmbd | sed -n 's/^ksmbd\.@share\[\([0-9]\+\)\]=share$/\1/p')[m
[36m@@ -222,6 +451,13 @@[m [mparse_args() {[m
                 shift || fatal '–û–ø—Ü–∏—è --ssh-user —Ç—Ä–µ–±—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç' "$EX_USAGE"[m
                 SSH_USER=$1[m
                 ;;[m
[32m+[m[32m            --output=*)[m
[32m+[m[32m                OUT_DIR=${1#--output=}[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --output)[m
[32m+[m[32m                shift || fatal '–û–ø—Ü–∏—è --output —Ç—Ä–µ–±—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç' "$EX_USAGE"[m
[32m+[m[32m                OUT_DIR=$1[m
[32m+[m[32m                ;;[m
             --out-dir=*)[m
                 OUT_DIR=${1#--out-dir=}[m
                 ;;[m
[36m@@ -229,6 +465,48 @@[m [mparse_args() {[m
                 shift || fatal '–û–ø—Ü–∏—è --out-dir —Ç—Ä–µ–±—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç' "$EX_USAGE"[m
                 OUT_DIR=$1[m
                 ;;[m
[32m+[m[32m            --upload=*)[m
[32m+[m[32m                parse_upload_target "${1#--upload=}"[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --upload)[m
[32m+[m[32m                shift || fatal '–û–ø—Ü–∏—è --upload —Ç—Ä–µ–±—É–µ—Ç URL' "$EX_USAGE"[m
[32m+[m[32m                parse_upload_target "$1"[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --identity=*)[m
[32m+[m[32m                IDENTITY_FILE=${1#--identity=}[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --identity)[m
[32m+[m[32m                shift || fatal '–û–ø—Ü–∏—è --identity —Ç—Ä–µ–±—É–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É' "$EX_USAGE"[m
[32m+[m[32m                IDENTITY_FILE=$1[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --known-hosts=*)[m
[32m+[m[32m                KNOWN_HOSTS_FILE=${1#--known-hosts=}[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --known-hosts)[m
[32m+[m[32m                shift || fatal '–û–ø—Ü–∏—è --known-hosts —Ç—Ä–µ–±—É–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É' "$EX_USAGE"[m
[32m+[m[32m                KNOWN_HOSTS_FILE=$1[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --retry=*)[m
[32m+[m[32m                UPLOAD_RETRY=${1#--retry=}[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --retry)[m
[32m+[m[32m                shift || fatal '–û–ø—Ü–∏—è --retry —Ç—Ä–µ–±—É–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ' "$EX_USAGE"[m
[32m+[m[32m                UPLOAD_RETRY=$1[m
[32m+[m[32m                ;;[m
[32m+[m[32m            -n | --dry-run)[m
[32m+[m[32m                DRY_RUN_ENABLED=1[m
[32m+[m[32m                ;;[m
[32m+[m[32m            --dry-run=*)[m
[32m+[m[32m                value=${1#--dry-run=}[m
[32m+[m[32m                case "$value" in[m
[32m+[m[32m                    '' | 0 | [Ff][Aa][Ll][Ss][Ee] | [Nn][Oo] | [Oo][Ff][Ff])[m
[32m+[m[32m                        DRY_RUN_ENABLED=0[m
[32m+[m[32m                        ;;[m
[32m+[m[32m                    *)[m
[32m+[m[32m                        DRY_RUN_ENABLED=1[m
[32m+[m[32m                        ;;[m
[32m+[m[32m                esac[m
[32m+[m[32m                ;;[m
             -v)[m
                 if [ "$LOG_LEVEL" -lt 2 ]; then[m
                     LOG_LEVEL=$((LOG_LEVEL + 1))[m
[36m@@ -276,6 +554,15 @@[m [mparse_args() {[m
             ;;[m
     esac[m
 [m
[32m+[m[32m    case "$UPLOAD_RETRY" in[m
[32m+[m[32m        '' | *[!0-9]*)[m
[32m+[m[32m            fatal '–û–ø—Ü–∏—è --retry –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º' "$EX_USAGE"[m
[32m+[m[32m            ;;[m
[32m+[m[32m        0)[m
[32m+[m[32m            fatal '–û–ø—Ü–∏—è --retry –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å >= 1' "$EX_USAGE"[m
[32m+[m[32m            ;;[m
[32m+[m[32m    esac[m
[32m+[m
     OUT_DIR=$(to_absolute_path "$OUT_DIR")[m
 }[m
 [m
[36m@@ -314,12 +601,18 @@[m [mprepare_environment() {[m
         log_debug '–†–µ–∂–∏–º —ç–∫—Å–ø–æ—Ä—Ç–∞: local'[m
     fi[m
 [m
[31m-    if ! mkdir -p "$OUT_DIR"; then[m
[31m-        fatal "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥: $OUT_DIR" "$EX_SOFTWARE"[m
[31m-    fi[m
[32m+[m[32m    if [ "$DRY_RUN_ENABLED" -eq 0 ]; then[m
[32m+[m[32m        if ! mkdir -p "$OUT_DIR"; then[m
[32m+[m[32m            fatal "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥: $OUT_DIR" "$EX_SOFTWARE"[m
[32m+[m[32m        fi[m
[32m+[m
[32m+[m[32m        if [ ! -w "$OUT_DIR" ]; then[m
[32m+[m[32m            fatal "–ö–∞—Ç–∞–ª–æ–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏: $OUT_DIR" "$EX_SOFTWARE"[m
[32m+[m[32m        fi[m
 [m
[31m-    if [ ! -w "$OUT_DIR" ]; then[m
[31m-        fatal "–ö–∞—Ç–∞–ª–æ–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏: $OUT_DIR" "$EX_SOFTWARE"[m
[32m+[m[32m        if [ ! -d "$OVERLAY_PATH" ]; then[m
[32m+[m[32m            fatal "–ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $OVERLAY_PATH" "$EX_SOFTWARE"[m
[32m+[m[32m        fi[m
     fi[m
 }[m
 [m
[36m@@ -333,17 +626,43 @@[m [mcreate_archive() {[m
         fatal "–§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $ARCHIVE_PATH" "$EX_SOFTWARE"[m
     fi[m
 [m
[32m+[m[32m    case "$OVERLAY_PATH" in[m
[32m+[m[32m        /)[m
[32m+[m[32m            overlay_base='/'[m
[32m+[m[32m            exclude_work='/work'[m
[32m+[m[32m            exclude_run='/upper/run'[m
[32m+[m[32m            exclude_os_release='/upper/etc/os-release'[m
[32m+[m[32m            exclude_usr_os_release='/upper/usr/lib/os-release'[m
[32m+[m[32m            ;;[m
[32m+[m[32m        *)[m
[32m+[m[32m            overlay_base=${OVERLAY_PATH%/}[m
[32m+[m[32m            if [ -z "$overlay_base" ]; then[m
[32m+[m[32m                overlay_base='/overlay'[m
[32m+[m[32m            fi[m
[32m+[m[32m            exclude_work="$overlay_base/work"[m
[32m+[m[32m            exclude_run="$overlay_base/upper/run"[m
[32m+[m[32m            exclude_os_release="$overlay_base/upper/etc/os-release"[m
[32m+[m[32m            exclude_usr_os_release="$overlay_base/upper/usr/lib/os-release"[m
[32m+[m[32m            ;;[m
[32m+[m[32m    esac[m
[32m+[m
[32m+[m[32m    if [ "$DRY_RUN_ENABLED" -eq 1 ]; then[m
[32m+[m[32m        log_info '–†–µ–∂–∏–º dry-run: –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –±–µ–∑ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤'[m
[32m+[m[32m        log_info "–†–µ–∂–∏–º dry-run: –∞—Ä—Ö–∏–≤ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è (–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—É—Ç—å: $ARCHIVE_PATH)"[m
[32m+[m[32m        return 0[m
[32m+[m[32m    fi[m
[32m+[m
     log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞: $ARCHIVE_PATH"[m
     REMOVE_ARCHIVE_ON_FAILURE=1[m
 [m
     if ! tar -czpf "$ARCHIVE_PATH" \[m
         --preserve-permissions \[m
         --same-owner \[m
[31m-        --exclude='/overlay/work' \[m
[31m-        --exclude='/overlay/upper/run' \[m
[31m-        --exclude='/overlay/upper/etc/os-release' \[m
[31m-        --exclude='/overlay/upper/usr/lib/os-release' \[m
[31m-        /overlay; then[m
[32m+[m[32m        --exclude="$exclude_work" \[m
[32m+[m[32m        --exclude="$exclude_run" \[m
[32m+[m[32m        --exclude="$exclude_os_release" \[m
[32m+[m[32m        --exclude="$exclude_usr_os_release" \[m
[32m+[m[32m        "$overlay_base"; then[m
         fatal '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤' "$EX_SOFTWARE"[m
     fi[m
 [m
[36m@@ -383,6 +702,11 @@[m [mgenerate_password() {[m
 }[m
 [m
 setup_smb_export() {[m
[32m+[m[32m    if [ "$DRY_RUN_ENABLED" -eq 1 ]; then[m
[32m+[m[32m        log_info '–†–µ–∂–∏–º dry-run: SMB-—ç–∫—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è'[m
[32m+[m[32m        return 0[m
[32m+[m[32m    fi[m
[32m+[m
     ensure_ksmbd_dependencies[m
 [m
     if [ -z "$KSMBD_PASSWORD" ]; then[m
[36m@@ -490,8 +814,16 @@[m [memit_scp_instruction() {[m
 parse_args "$@"[m
 [m
 prepare_environment[m
[32m+[m[32mprepare_upload_environment[m
[32m+[m
 create_archive[m
 [m
[32m+[m[32mperform_upload[m
[32m+[m[32mupload_status=$?[m
[32m+[m[32mif [ "$upload_status" -ne 0 ]; then[m
[32m+[m[32m    exit "$upload_status"[m
[32m+[m[32mfi[m
[32m+[m
 case "$EXPORT_MODE" in[m
     scp)[m
         emit_scp_instruction[m
[36m@@ -500,7 +832,9 @@[m [mcase "$EXPORT_MODE" in[m
         setup_smb_export[m
         ;;[m
     local)[m
[31m-        log_info "–ê—Ä—Ö–∏–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $ARCHIVE_PATH"[m
[32m+[m[32m        if [ "$DRY_RUN_ENABLED" -eq 0 ]; then[m
[32m+[m[32m            log_info "–ê—Ä—Ö–∏–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $ARCHIVE_PATH"[m
[32m+[m[32m        fi[m
         ;;[m
 esac[m
 [m
[1mdiff --git a/tests/openwrt_full_backup.bats b/tests/openwrt_full_backup.bats[m
[1mindex cc466fc..190744f 100644[m
[1m--- a/tests/openwrt_full_backup.bats[m
[1m+++ b/tests/openwrt_full_backup.bats[m
[36m@@ -3,21 +3,21 @@[m
 setup() {[m
     PROJECT_ROOT=$(cd "$BATS_TEST_DIRNAME/.." 2>/dev/null && pwd)[m
     SCRIPT_PATH="$PROJECT_ROOT/scripts/openwrt_full_backup"[m
[31m-<<<<<<< HEAD[m
 [m
     PATH_ORIG=$PATH[m
     TEST_ROOT=$(mktemp -d)[m
     BIN_DIR="$TEST_ROOT/bin"[m
     mkdir -p "$BIN_DIR"[m
[31m-    export PATH="$BIN_DIR:$PATH_ORIG"[m
[32m+[m[32m    PATH="$BIN_DIR:$PATH_ORIG"[m
[32m+[m[32m    export PATH[m
 [m
     REAL_DATE=$(command -v date)[m
     cat >"$BIN_DIR/date" <<EOF[m
 #!/bin/sh[m
[31m-if [ "\$#" -eq 0 ]; then[m
[32m+[m[32mif [ "$#" -eq 0 ]; then[m
     exec "$REAL_DATE"[m
 fi[m
[31m-case "\$1" in[m
[32m+[m[32mcase "$1" in[m
     '+%Y-%m-%d %H:%M:%S')[m
         printf '2024-01-01 00:00:00\n'[m
         ;;[m
[36m@@ -28,7 +28,7 @@[m [mcase "\$1" in[m
         printf '000000\n'[m
         ;;[m
     *)[m
[31m-        exec "$REAL_DATE" "\$@"[m
[32m+[m[32m        exec "$REAL_DATE" "$@"[m
         ;;[m
 esac[m
 EOF[m
[36m@@ -37,15 +37,15 @@[m [mEOF[m
     REAL_UNAME=$(command -v uname)[m
     cat >"$BIN_DIR/uname" <<EOF[m
 #!/bin/sh[m
[31m-if [ "\$#" -gt 0 ]; then[m
[31m-    case "\$1" in[m
[32m+[m[32mif [ "$#" -gt 0 ]; then[m
[32m+[m[32m    case "$1" in[m
         -n)[m
             printf 'TestRouter\n'[m
             exit 0[m
             ;;[m
     esac[m
 fi[m
[31m-exec "$REAL_UNAME" "\$@"[m
[32m+[m[32mexec "$REAL_UNAME" "$@"[m
 EOF[m
     chmod +x "$BIN_DIR/uname"[m
 [m
[36m@@ -100,7 +100,6 @@[m [mEOF[m
     export OVERLAY_SOURCE="$OVERLAY_DIR"[m
 [m
     OUT_DIR="$TEST_ROOT/out"[m
[31m-    mkdir -p "$OUT_DIR"[m
     EXPECTED_ARCHIVE="$OUT_DIR/fullbackup_TestRouter_2024-01-01_00-00-00.tar.gz"[m
 }[m
 [m
[36m@@ -111,6 +110,20 @@[m [mteardown() {[m
         MOCK_UPLOAD_FAIL_FILE MOCK_UPLOAD_FAIL_CODE MOCK_UPLOAD_EXIT_CODE[m
 }[m
 [m
[32m+[m[32mmock_tar_setup() {[m
[32m+[m[32m    MOCK_TAR_DIR="$TEST_ROOT/mock-tar"[m
[32m+[m[32m    mkdir -p "$MOCK_TAR_DIR"[m
[32m+[m[32m    MOCK_TAR_MARKER="$TEST_ROOT/tar-invoked"[m
[32m+[m[32m    rm -f "$MOCK_TAR_MARKER"[m
[32m+[m[32m    cat >"$MOCK_TAR_DIR/tar" <<EOF[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mtouch "$MOCK_TAR_MARKER"[m
[32m+[m[32mprintf 'mock tar executed\n' >&2[m
[32m+[m[32mexit 1[m
[32m+[m[32mEOF[m
[32m+[m[32m    chmod +x "$MOCK_TAR_DIR/tar"[m
[32m+[m[32m}[m
[32m+[m
 @test "scp upload invokes scp with provided options" {[m
     identity="$TEST_ROOT/id_ed25519"[m
     known_hosts="$TEST_ROOT/known_hosts"[m
[36m@@ -122,9 +135,9 @@[m [mteardown() {[m
         --upload "scp://backup@example.com:/remote/archive.tar.gz" \[m
         --identity "$identity" \[m
         --known-hosts "$known_hosts" \[m
[31m-        --port 2022 \[m
[32m+[m[32m        --ssh-port 2022 \[m
         --retry 1 \[m
[31m-        --out-dir "$OUT_DIR" \[m
[32m+[m[32m        --output "$OUT_DIR" \[m
         --export=scp[m
 [m
     [ "$status" -eq 0 ][m
[36m@@ -137,7 +150,7 @@[m [mteardown() {[m
     [[ "$command_logged" == *"UserKnownHostsFile=$known_hosts"* ]][m
     [[ "$command_logged" == *"StrictHostKeyChecking=yes"* ]][m
     [[ "$command_logged" == *"$EXPECTED_ARCHIVE"* ]][m
[31m-    [[ "$command_logged" == *"backup@example.com:'/remote/archive.tar.gz'"* ]][m
[32m+[m[32m    [[ "$command_logged" == *"backup@example.com:/remote/archive.tar.gz"* ]][m
 }[m
 [m
 @test "sftp upload writes batch file" {[m
[36m@@ -146,7 +159,7 @@[m [mteardown() {[m
 [m
     run "$SCRIPT_PATH" \[m
         --upload "sftp://backup@example.com:/remote/archive.tar.gz" \[m
[31m-        --out-dir "$OUT_DIR" \[m
[32m+[m[32m        --output "$OUT_DIR" \[m
         --export=local[m
 [m
     [ "$status" -eq 0 ][m
[36m@@ -169,7 +182,7 @@[m [mteardown() {[m
 [m
     run "$SCRIPT_PATH" \[m
         --upload "scp://backup@example.com:/remote/archive.tar.gz" \[m
[31m-        --out-dir "$OUT_DIR" \[m
[32m+[m[32m        --output "$OUT_DIR" \[m
         --retry 2 \[m
         --export=local[m
 [m
[36m@@ -188,7 +201,7 @@[m [mteardown() {[m
 [m
     run "$SCRIPT_PATH" \[m
         --upload "scp://backup@example.com:/remote/archive.tar.gz" \[m
[31m-        --out-dir "$OUT_DIR" \[m
[32m+[m[32m        --output "$OUT_DIR" \[m
         --retry 2 \[m
         --export=local[m
 [m
[36m@@ -203,40 +216,19 @@[m [mteardown() {[m
 [m
     run "$SCRIPT_PATH" \[m
         --upload "scp://backup@example.com:/remote/archive.tar.gz" \[m
[31m-        --out-dir "$OUT_DIR" \[m
[32m+[m[32m        --output "$OUT_DIR" \[m
         --export=scp \[m
         --dry-run[m
 [m
     [ "$status" -eq 0 ][m
     [ ! -f "$EXPECTED_ARCHIVE" ][m
[32m+[m[32m    [ ! -d "$OUT_DIR" ][m
     if [ -e "$MOCK_UPLOAD_LOG" ]; then[m
         [ ! -s "$MOCK_UPLOAD_LOG" ][m
     fi[m
 [m
     [[ "$output" == *"–†–µ–∂–∏–º dry-run: –≥–æ—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ SCP"* ]][m
     [[ "$output" == *"/remote/archive.tar.gz"* ]][m
[31m-=======[m
[31m-    MOCK_BIN="$BATS_TEST_TMPDIR/bin"[m
[31m-    mkdir -p "$MOCK_BIN"[m
[31m-[m
[31m-    cat >"$MOCK_BIN/tar" <<EOF[m
[31m-#!/bin/sh[m
[31m-touch "$BATS_TEST_TMPDIR/tar-invoked"[m
[31m-printf 'mock tar executed\n' >&2[m
[31m-exit 1[m
[31m-EOF[m
[31m-    chmod +x "$MOCK_BIN/tar"[m
[31m-[m
[31m-    PATH_ORIGINAL=$PATH[m
[31m-    PATH="$MOCK_BIN:$PATH_ORIGINAL"[m
[31m-    export PATH[m
[31m-[m
[31m-    rm -f "$BATS_TEST_TMPDIR/tar-invoked"[m
[31m-}[m
[31m-[m
[31m-teardown() {[m
[31m-    PATH=$PATH_ORIGINAL[m
[31m-    export PATH[m
 }[m
 [m
 @test "usage mentions dry-run and output options" {[m
[36m@@ -247,35 +239,43 @@[m [mteardown() {[m
 }[m
 [m
 @test "dry-run flag avoids side effects" {[m
[31m-    rm -f "$BATS_TEST_TMPDIR/tar-invoked"[m
[31m-    output_dir="$BATS_TEST_TMPDIR/custom-output"[m
[31m-    run "$SCRIPT_PATH" -n --output "$output_dir"[m
[32m+[m[32m    mock_tar_setup[m
[32m+[m[32m    output_dir="$TEST_ROOT/custom-output"[m
[32m+[m[32m    PATH_WITH_MOCK="$MOCK_TAR_DIR:$PATH"[m
[32m+[m
[32m+[m[32m    run env PATH="$PATH_WITH_MOCK" "$SCRIPT_PATH" -n --output "$output_dir"[m
[32m+[m
     [ "$status" -eq 0 ][m
     [[ "$output" == *"–†–µ–∂–∏–º dry-run: –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –±–µ–∑ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤"* ]][m
     [[ "$output" == *"–†–µ–∂–∏–º dry-run: –∞—Ä—Ö–∏–≤ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è"* ]][m
     [[ "$output" == *"$output_dir"* ]][m
[31m-    [ ! -f "$BATS_TEST_TMPDIR/tar-invoked" ][m
[32m+[m[32m    [ ! -f "$MOCK_TAR_MARKER" ][m
     [ ! -d "$output_dir" ][m
 }[m
 [m
 @test "DRY_RUN environment variable enables dry-run" {[m
[31m-    rm -f "$BATS_TEST_TMPDIR/tar-invoked"[m
[31m-    output_dir="$BATS_TEST_TMPDIR/env-output"[m
[31m-    run env DRY_RUN=true "$SCRIPT_PATH" --output "$output_dir"[m
[32m+[m[32m    mock_tar_setup[m
[32m+[m[32m    output_dir="$TEST_ROOT/env-output"[m
[32m+[m[32m    PATH_WITH_MOCK="$MOCK_TAR_DIR:$PATH"[m
[32m+[m
[32m+[m[32m    run env DRY_RUN=true PATH="$PATH_WITH_MOCK" "$SCRIPT_PATH" --output "$output_dir"[m
[32m+[m
     [ "$status" -eq 0 ][m
     [[ "$output" == *"–†–µ–∂–∏–º dry-run: –∞—Ä—Ö–∏–≤ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è"* ]][m
[31m-    [ ! -f "$BATS_TEST_TMPDIR/tar-invoked" ][m
[32m+[m[32m    [ ! -f "$MOCK_TAR_MARKER" ][m
     [ ! -d "$output_dir" ][m
 }[m
 [m
 @test "--output accepts relative paths" {[m
[31m-    rm -f "$BATS_TEST_TMPDIR/tar-invoked"[m
[32m+[m[32m    mock_tar_setup[m
[32m+[m[32m    PATH_WITH_MOCK="$MOCK_TAR_DIR:$PATH"[m
     rm -rf relative-dir[m
     expected="$(pwd)/relative-dir"[m
[31m-    run env DRY_RUN=1 "$SCRIPT_PATH" --output relative-dir[m
[32m+[m
[32m+[m[32m    run env DRY_RUN=1 PATH="$PATH_WITH_MOCK" "$SCRIPT_PATH" --output relative-dir[m
[32m+[m
     [ "$status" -eq 0 ][m
     [[ "$output" == *"$expected"* ]][m
[31m-    [ ! -f "$BATS_TEST_TMPDIR/tar-invoked" ][m
[32m+[m[32m    [ ! -f "$MOCK_TAR_MARKER" ][m
     [ ! -d "$expected" ][m
[31m->>>>>>> origin/feat-5-backup-dry-run-output-tests[m
 }[m
