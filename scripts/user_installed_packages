#!/bin/sh
# shellcheck shell=sh

set -eu

if set -o pipefail 2>/dev/null; then
    :
fi

PROGRAM=$(basename "$0")
SCRIPT_PATH=$0

case "$SCRIPT_PATH" in
*/*)
    SCRIPT_SOURCE=$(dirname "$SCRIPT_PATH")
    ;;
*)
    LOOKUP=$(command -v -- "$SCRIPT_PATH" 2>/dev/null)
    if [ -n "$LOOKUP" ]; then
        SCRIPT_SOURCE=$(dirname "$LOOKUP")
    else
        SCRIPT_SOURCE='.'
    fi
    ;;
esac

if ! SCRIPT_DIR=$(cd "$SCRIPT_SOURCE" 2>/dev/null && pwd); then
    printf '%s: unable to determine script directory\n' "$PROGRAM" >&2
    exit 1
fi
PROJECT_ROOT=$(dirname "$SCRIPT_DIR")
VERSION_FILE="${PROJECT_ROOT}/VERSION"
SHARE_VERSION_FILE='/usr/share/openwrt-extended-backup/VERSION'
VERSION_FALLBACK='0.4.1'
VERSION=''

if [ -r "$VERSION_FILE" ]; then
    VERSION=$(head -n 1 "$VERSION_FILE")
elif [ -r "$SHARE_VERSION_FILE" ]; then
    VERSION=$(head -n 1 "$SHARE_VERSION_FILE")
fi

if [ -z "$VERSION" ]; then
    VERSION=$VERSION_FALLBACK
fi

show_version() {
    printf '%s version %s\n' "$PROGRAM" "$VERSION"
}

timestamp() {
    date '+%Y-%m-%d %H:%M:%S'
}

log_info() {
    if [ "$#" -gt 0 ]; then
        printf '%s INFO %s\n' "$(timestamp)" "$*" >&2
    else
        printf '%s INFO\n' "$(timestamp)" >&2
    fi
}

for arg in "$@"; do
    case "$arg" in
    -V | --version)
        show_version
        exit 0
        ;;
    esac
done

log_info 'Генерируем список вручную установленных пакетов opkg'

printf '\n'
printf '===============================================\n'
printf 'opkg update\n'

# Получаем самое старое время установки
DISTRI_TIME=$(awk '/Installed-Time/ {print $2}' /usr/lib/opkg/status | sort -n | head -n 1)

# Генерируем список пакетов, разделяя на обычные и luci-i18n-
awk -v distri_time="$DISTRI_TIME" '
BEGIN { RS = ""; FS = "\n" }
{
    pkg = ""
    status = ""
    auto = ""
    installed = ""
    for (i = 1; i <= NF; i++) {
        line = $i
        if (index(line, "Package: ") == 1) {
            pkg = substr(line, 10)
        } else if (index(line, "Status: ") == 1) {
            status = substr(line, 9)
        } else if (index(line, "Auto-Installed: ") == 1) {
            auto = substr(line, 17)
        } else if (index(line, "Installed-Time: ") == 1) {
            installed = substr(line, 17)
        }
    }

    if (pkg == "") {
        next
    }

    user_flag = 0
    if (status != "") {
        if (status ~ /(^|[[:space:]])user([[:space:]]|$)/) {
            user_flag = 1
        } else if (status ~ /(^|[[:space:]])hold([[:space:]]|$)/) {
            user_flag = 1
        }
    }

    if (!user_flag) {
        next
    }

    auto_installed = 0
    if (auto ~ /^[Yy][Ee][Ss]/) {
        auto_installed = 1
    }

    if (pkg != "" && !auto_installed) {
        if (pkg ~ /luci-i18n-/) {
            print "2 " pkg
        } else {
            print "1 " pkg
        }
    }
}' /usr/lib/opkg/status | sort -k1,1n -k2 | cut -d' ' -f2- | while IFS= read -r pkg; do
    printf 'opkg install %s\n' "$pkg"
done

printf '===============================================\n'
