name: Shell quality

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  shell-quality:
    name: shell quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y bats shellcheck curl ca-certificates busybox

      - name: Install shfmt
        env:
          SHFMT_VERSION: "3.9.2"
        run: |
          set -euo pipefail
          curl -sSfL "https://github.com/mvdan/sh/releases/download/v${SHFMT_VERSION}/shfmt_v${SHFMT_VERSION}_linux_amd64" -o shfmt
          sudo install -m 0755 shfmt /usr/local/bin/shfmt

      - name: Collect shell scripts
        run: |
          set -euo pipefail
          shell_files="shell-files.txt"
          : > "$shell_files"
          while IFS= read -r -d '' file; do
            if [ ! -f "$file" ]; then
              continue
            fi
            if head -n 1 "$file" | grep -Eq '^#!.*\b(sh|bash)\b'; then
              printf '%s\0' "$file" >> "$shell_files"
            fi
          done < <(git ls-files -z)
          if [ ! -s "$shell_files" ]; then
            echo "No shell scripts found to check. Skipping ShellCheck and shfmt steps."
            exit 0
          fi
          tmp_sorted="$(mktemp)"
          LC_ALL=C sort -zu "$shell_files" > "$tmp_sorted"
          mv "$tmp_sorted" "$shell_files"
          echo "Shell scripts to check:"
          tr '\0' '\n' < "$shell_files"

      - name: Run shellcheck
        run: |
          set -euo pipefail
          if [ ! -s shell-files.txt ]; then
            echo "No shell scripts found. Skipping ShellCheck."
            exit 0
          fi
          if [ -f .shellcheckrc ]; then
            xargs -0 -r shellcheck --config-file ".shellcheckrc" -s sh -- < shell-files.txt
          else
            echo "Warning: .shellcheckrc not found. Running ShellCheck with default configuration." >&2
            xargs -0 -r shellcheck -s sh -- < shell-files.txt
          fi

      - name: Check formatting with shfmt
        run: |
          set -euo pipefail
          if [ ! -s shell-files.txt ]; then
            echo "No shell scripts found. Skipping shfmt."
            exit 0
          fi
          xargs -0 -r shfmt -d -i 2 -bn -ci -sr -- < shell-files.txt

      - name: Run Bats tests
        env:
          BATS_SHELL: /bin/sh
        run: |
          set -euo pipefail
          if [ ! -d tests ]; then
            echo "tests/ directory not found. Skipping Bats tests."
            exit 0
          fi
          bats tests

  post-release-verify:
    name: Post-release verify
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: No-op verification
        run: echo "Post-release verification is not required for pull requests."
