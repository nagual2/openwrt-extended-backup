name: Publish opkg feed

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  package:
    name: Build package artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Build .ipk packages
        run: |
          set -euo pipefail
          make clean
          make ipk

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ipk-packages
          path: dist/*.ipk
          if-no-files-found: error

  publish:
    name: Publish feed to gh-pages
    needs: package
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          name: ipk-packages
          path: packages

      - name: Prepare feed directory structure
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          mkdir -p feed/packages
          for ipk in packages/*.ipk; do
            filename=$(basename "$ipk")
            arch=${filename##*_}
            arch=${arch%.ipk}
            install -d "feed/packages/${arch}"
            mv "$ipk" "feed/packages/${arch}/${filename}"
          done

      - name: Include public signing key
        run: |
          set -euo pipefail
          mkdir -p feed/keys
          cp docs/opkg-feed-public.key feed/keys/

      - name: Generate Packages index
        shell: bash
        run: |
          set -euo pipefail
          python3 <<'PY'
import gzip
import hashlib
import io
import pathlib
import subprocess
import tarfile

feed_root = pathlib.Path('feed/packages')
for arch_dir in sorted(feed_root.glob('*')):
    if not arch_dir.is_dir():
        continue
    entries = []
    for ipk_path in sorted(arch_dir.glob('*.ipk')):
        ipk_bytes = ipk_path.read_bytes()
        control_tar_gz = subprocess.check_output(['ar', 'p', str(ipk_path), 'control.tar.gz'])
        with tarfile.open(fileobj=io.BytesIO(control_tar_gz), mode='r:gz') as tf:
            control_file = tf.extractfile('./control') or tf.extractfile('control')
            if control_file is None:
                raise FileNotFoundError(f'control file missing in {ipk_path}')
            control_content = control_file.read().decode('utf-8').rstrip('\n')
        relative_filename = arch_dir.relative_to(feed_root.parent) / ipk_path.name
        entry_parts = [
            control_content,
            f'Filename: {relative_filename.as_posix()}',
            f'Size: {len(ipk_bytes)}',
            f'MD5sum: {hashlib.md5(ipk_bytes).hexdigest()}',
            f'SHA256sum: {hashlib.sha256(ipk_bytes).hexdigest()}',
        ]
        entries.append('\n'.join(entry_parts))
    packages_text = '\n\n'.join(entries) + '\n'
    packages_path = arch_dir / 'Packages'
    packages_path.write_text(packages_text, encoding='utf-8')
    with gzip.GzipFile(filename=str(arch_dir / 'Packages.gz'), mode='wb', compresslevel=9, mtime=0) as gz:
        gz.write(packages_text.encode('utf-8'))
PY

      - name: Build usign (if signing is enabled)
        if: secrets.OPKG_FEED_SIGNING_KEY != ''
        shell: bash
        run: |
          set -euo pipefail
          git clone https://git.openwrt.org/project/usign.git /tmp/usign
          cmake -S /tmp/usign -B /tmp/usign/build
          cmake --build /tmp/usign/build --target usign
          sudo install -m 0755 /tmp/usign/build/usign /usr/local/bin/usign

      - name: Sign package indexes
        if: secrets.OPKG_FEED_SIGNING_KEY != ''
        shell: bash
        env:
          OPKG_FEED_SIGNING_KEY: ${{ secrets.OPKG_FEED_SIGNING_KEY }}
        run: |
          set -euo pipefail
          key_path=$(mktemp)
          printf '%s\n' "$OPKG_FEED_SIGNING_KEY" > "$key_path"
          chmod 600 "$key_path"
          for pkg_file in feed/packages/*/Packages; do
            [ -f "$pkg_file" ] || continue
            usign -S -m "$pkg_file" -s "$key_path" -x "${pkg_file}.sig"
          done
          rm -f "$key_path"

      - name: Disable Jekyll processing
        run: |
          set -euo pipefail
          touch feed/.nojekyll

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: feed
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
          commit_message: "Publish opkg feed for ${{ github.ref_name }}"
